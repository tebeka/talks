













































"~/Talks/pyconil-2022/users.py" 32L, 550





























  4 
  5 
  6 @dataclass
  7 class User:
  8     id: str
  9     login: str
 10     created: datetime
 11 
 12     def to_json(self):
 13         return json.dumps(self)
 14 
 15     @classmethod
 16     def from_json(cls, data):
 17         kw = json.loads(data)
 18         u = cls(**kw)
 19         return u
 20 
 21 
 22 u7 = User(
 23     id='007',
 24     login='Bond',
 25     created=datetime(1953, 3, 13, tzinfo=timezone.utc),  # Casino Royale
 26 )
 27 print('u7:', u7)
 28 
 29 
 30 data = u7.to_json()
 31 print('data:', data)
 32






















































































"~/Talks/pyconil-2022/users.py" 32L, 550

























































"~/Talks/pyconil-2022/users.py" 32L, 566


























































"~/Talks/pyconil-2022/users.py" 37L, 682



























































"~/Talks/pyconil-2022/users.py" 42L, 800






































"~/Talks/pyconil-2022/users.py" 48L, 923


  3 from datetime import datetime, timezone
  4 
  5 
  6 def default(obj):
  7     if isinstance(obj, datetime):
  8         return obj.isoformat()
  9     return obj
 10 
 11 
 12 def obj_hook(obj):
 13     obj['created'] = datetime.fromisoformat(obj['created'])
 14     return obj
 15 
 16 @dataclass
 17


 20     created: datetime
 21 
 22     def to_json(self):
 23         return json.dumps(asdict(self), default=default)
 24 
 25     def validate(self):
 26         if not self.id:
 27             raise ValueError('missing id')
 28         if not self.login:
 29             raise ValueError('missing login')
 30         now = datetime.now(tz=timezone.utc)
 31         if self.created > now:
 32             raise ValueError('created is in the future')
 33     @classmethod
 34    







 12 def obj_hook(obj):
 13     obj['created'] = datetime.fromisoformat(obj['created'])
 14     return obj
 15 
 16 @dataclass
 17 class User:
 18     id: str
 19     login: str
 20     created: datetime
 21 
 22     def to_json(self):
 23         return json.dumps(asdict(self), default=default)
 24 
 25     def validate(self):
 26        



































"~/Talks/pyconil-2022/users.py" 58L, 1241


  3 from datetime import datetime, timezone
  4 
  5 
  6 def default(obj):
  7     if isinstance(obj, datetime):
  8         return obj.isoformat()
  9     return obj
 10 
 11 
 12 def obj_hook(obj):
 13     obj['created'] = datetime.fromisoformat(obj['created'])
 14     return obj
 15 
 16 @dataclass
 17


 20     created: datetime
 21     icon: bytes = b''
 22     
 23     def to_json(self):
 24         return json.dumps(asdict(self), default=default)
 25 
 26     def validate(self):
 27         if not self.id:
 28             raise ValueError('missing id')
 29         if not self.login:
 30             raise ValueError('missing login')
 31         now = datetime.now(tz=timezone.utc)
 32         if self.created > now:
 33             raise ValueError('created is in the future')
 34
























 27        
















 40        


















































"~/Talks/pyconil-2022/users.py" 63L, 1458

   67     id='81',
   68     login='Q',
   69     created=datetime(1964, 9, 22, tzinfo=timezone.utc),  # Goldfinger
   70     icon=b'\x89PNG\r\n\x1a\x0a...',
   71 )
   72 
   73 users = [
   74     u7,
   75     q,
   76 ]
   77 
   78 # See also HTTP chunked transfer encoding
   79 from socket import socketpair
   80 w, r = socketpair()
   81