# In the Loop

Miki Tebeka
miki@353solutions.com
@tebeka

## The Boring One

If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
Find the sum of all the multiples of 3 or 5 below 1000. ([Euler problem 1](https://projecteuler.net/problem=1))

.play euler_1.go /START/,/END/

## Two

.code pali.go /START/,/END/
.play pali.go /START_M/,/END_M/

## While

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
([Euler problem 2](https://projecteuler.net/problem=2))

.play euler_2.go /START/,/END/

## Forever

.code handler.go /AAA/,/BBB/
.code handler.go /START/,/END/

## range ∴ slice

.play slice.go /START/,/END/

## range ∴ Values

.play scores.go

## range ∴ Reference

.play scores_fixed.go

## range ∴ map

Same as slices ☺

## range ∴ channel

.play chan.go /START/,/END/

## range ∴ channel (fix)

.play chan_fix.go /START/,/END/

## range ∴ channel (expand)

.play chan_expand.go /START/,/END/

## range ∴ nothing

.play palis.go /START/,/END/

See [redefining for loop variable semantics](https://github.com/golang/go/discussions/56010).

## Nested

.play nested.go /START/,/END/

## Nested (fix)

.play nested_fix.go /START/,/END/

## goto

.image xkcd-goto.png

[https://xkcd.com/292/](https://xkcd.com/292/)

## Standard Library

.code goto.sh


**646**

## Nested (again)

.play netsted_goto.go
